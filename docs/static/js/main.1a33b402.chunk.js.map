{"version":3,"sources":["services/api.js","images/logo-rick-morty.png","audio/rick-and-morty-theme-song-hd.mp3","components/Header.js","components/CharacterCard.js","images/rick-morty.png","components/CharacterNotFound.js","components/CharacterList.js","components/FilterByAlphabeticalOrder.js","components/FilterByName.js","components/FilterBySpecie.js","components/Filters.js","images/rick-morty-link.png","components/CharacterDetail.js","components/Loading.js","components/App.js","reportWebVitals.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","name","id","species","image","status","origin","episodes","episode","Header","className","src","logo","alt","title","autoplay","controls","loop","audio","type","CharacterCard","props","to","defaultProps","CharacterNotFound","notFound","CharacterList","characterItems","characters","length","FilterByAlphabeticalOrder","htmlFor","onChange","ev","handleCheckInput","target","checked","FilterByName","placeholder","handleFilterChange","value","nameFilter","FilterBySpecies","Filters","onSubmit","preventDefault","FilterBySpecie","CharacterDetail","Loading","App","useState","setCharacters","setNameFilter","speciesFilter","setSpeciesFilter","orderFilter","setOrderFilter","isLoading","setIsLoading","useEffect","newCharacters","filteredCharacters","filter","toLowerCase","includes","sort","prev","next","exact","path","inputChecked","render","findCharacter","find","parseInt","match","params","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a33b402.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          id: character.id,\r\n          species: character.species,\r\n          image: character.image,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episodes: character.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","export default __webpack_public_path__ + \"static/media/logo-rick-morty.de13d484.png\";","export default __webpack_public_path__ + \"static/media/rick-and-morty-theme-song-hd.27ec954d.mp3\";","import React from \"react\";\r\nimport logo from \"../images/logo-rick-morty.png\";\r\nimport \"../stylesheets/Header.scss\";\r\nimport audio from \"../audio/rick-and-morty-theme-song-hd.mp3\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        src={logo}\r\n        alt=\"Logo de Rick and Morty\"\r\n        title=\"Logo de Rick and Morty\"\r\n        className=\"header__image\"\r\n      />\r\n      <audio className=\"header__audio\" autoplay controls loop>\r\n        <source src={audio} type=\"audio/mp3\" />\r\n      </audio>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/Characters.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <>\r\n      <Link to={`/character/${props.character.id}`}>\r\n        <img\r\n          src={props.character.image}\r\n          alt={\"Imagen de \" + props.character.name}\r\n          title={\"Imagen de \" + props.character.name}\r\n          className=\"characters__list--image\"\r\n        />\r\n        <h2 className=\"characters__list--title\">{props.character.name}</h2>\r\n        <p className=\"characters__list--text\">{props.character.species}</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nCharacterCard.defaultProps = {\r\n  name: \"Unknown character\",\r\n  image:\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/assets/img/19.jpeg\",\r\n  species: \"Unknown\",\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/rick-morty.bf56a1a0.png\";","import React from \"react\";\r\nimport notFound from \"../images/rick-morty.png\";\r\nimport \"../stylesheets/CharacterNotFound.scss\";\r\n\r\nconst CharacterNotFound = () => {\r\n  return (\r\n    <div className=\"character__container\">\r\n      <p className=\"character__text\">Character not found</p>\r\n      <img\r\n        className=\"character__image\"\r\n        src={notFound}\r\n        alt=\"Rick and Morty\"\r\n        title=\"Rick and Morty\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport \"../stylesheets/Characters.scss\";\r\nimport CharacterNotFound from \"./CharacterNotFound\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterItems = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id} className=\"characters__list\">\r\n        <CharacterCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return characterItems.length === 0 ? (\r\n    <CharacterNotFound />\r\n  ) : (\r\n    <ul className=\"characters\">{characterItems}</ul>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","import React from \"react\";\r\n\r\nconst FilterByAlphabeticalOrder = (props) => {\r\n  const handleCheckInput = (ev) => {\r\n    props.handleCheckInput(ev.target.checked);\r\n  };\r\n  return (\r\n    <>\r\n      <label className=\"form__label\" htmlFor=\"order\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"order\"\r\n          name=\"order\"\r\n          className=\"form__checkbox\"\r\n          onChange={handleCheckInput}\r\n        />\r\n        Order by name\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByAlphabeticalOrder;\r\n","import React from \"react\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleFilterChange = (ev) => {\r\n    props.handleFilterChange({\r\n      value: ev.target.value,\r\n      id: ev.target.id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        className=\"form__input\"\r\n        placeholder=\"Search\"\r\n        onChange={handleFilterChange}\r\n        value={props.nameFilter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import React from \"react\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleFilterChange = (ev) => {\r\n    props.handleFilterChange({\r\n      value: ev.target.value,\r\n      id: ev.target.id,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <select\r\n        name=\"species\"\r\n        id=\"species\"\r\n        className=\"form__select\"\r\n        onChange={handleFilterChange}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"human\">Human</option>\r\n        <option value=\"alien\">Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterBySpecies;\r\n","import React from \"react\";\r\nimport FilterByAlphabeticalOrder from \"./FilterByAlphabeticalOrder\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecie\";\r\n\r\nconst Filters = (props) => {\r\n  const handleFormSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form className=\"form\" onSubmit={handleFormSubmit}>\r\n      <FilterByName\r\n        handleFilterChange={props.handleFilterChange}\r\n        nameFilter={props.nameFilter}\r\n      />\r\n      <FilterBySpecies handleFilterChange={props.handleFilterChange} />\r\n      <FilterByAlphabeticalOrder handleCheckInput={props.handleCheckInput} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/rick-morty-link.f38322d8.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/CharacterDetail.scss\";\r\nimport character from \"../images/rick-morty-link.png\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  let status;\r\n  if (props.character.status === \"Dead\") {\r\n    status = \"fas fa-skull-crossbones\";\r\n  } else if (props.character.status === \"unknown\") {\r\n    status = \"far fa-question-circle\";\r\n  } else {\r\n    status = \"fas fa-heartbeat\";\r\n  }\r\n\r\n  let species;\r\n  if (props.character.species === \"Human\") {\r\n    species = \"fas fa-user\";\r\n  } else if (props.character.species === \"Alien\") {\r\n    species = \"fab fa-reddit-alien\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <article className=\"article\">\r\n        <img\r\n          src={props.character.image}\r\n          alt={\"Imagen de \" + props.character.name}\r\n          title={\"Imagen de \" + props.character.name}\r\n          className=\"article__image\"\r\n        />\r\n        <div className=\"article__container\">\r\n          <h2 className=\"article__container--title\">{props.character.name}</h2>\r\n          <p className=\"article__container--status\">\r\n            Status:\r\n            <i className={`icon ${status}`}></i>\r\n          </p>\r\n          <p className=\"article__container--species\">\r\n            Species:\r\n            <i className={`icon ${species}`}></i>\r\n          </p>\r\n          <p className=\"article__container--origin\">{`Origin: ${props.character.origin}`}</p>\r\n          <p className=\"article__container--episodes\">{`Episodes: ${props.character.episodes.length}`}</p>\r\n        </div>\r\n      </article>\r\n      <Link to=\"/\" className=\"article__link\">\r\n        <img\r\n          src={character}\r\n          alt=\"Rick and Morty\"\r\n          title=\"Rick and Morty\"\r\n          className=\"article__link--image\"\r\n        />\r\n        Back to all characters\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nCharacterDetail.defaultProps = {\r\n  name: \"Unknown character\",\r\n  image:\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/assets/img/19.jpeg\",\r\n  origin: \"Unknown\",\r\n  episodes: 0,\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n};\r\nexport default CharacterDetail;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Loading.scss\";\r\n\r\nconst Loading = () => {\r\n  return <div className=\"loading\"></div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\nimport \"../stylesheets/Form.scss\";\nimport getDataFromApi from \"../services/api\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Loading from \"./Loading\";\n\nconst App = () => {\n  // STATES\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [speciesFilter, setSpeciesFilter] = useState(\"all\");\n  const [orderFilter, setOrderFilter] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //API\n  useEffect(() => {\n    setIsLoading(true);\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  // HANDLE EVENTS\n  const handleFilterChange = (data) => {\n    if (data.id === \"name\") {\n      setNameFilter(data.value);\n    } else if (data.id === \"species\") {\n      setSpeciesFilter(data.value);\n    }\n  };\n\n  const handleCheckInput = (inputChecked) => {\n    if (inputChecked) {\n      setOrderFilter(true);\n    } else {\n      setOrderFilter(false);\n    }\n  };\n\n  // FUNCTIONS\n\n  // function to filter by name\n  function filterByName(character) {\n    return character.name.toLowerCase().includes(nameFilter.toLowerCase());\n  }\n\n  // function to filter by specie\n  function filterBySpecie(character) {\n    return speciesFilter === \"all\"\n      ? true\n      : character.species.toLowerCase() === speciesFilter;\n  }\n\n  // function to sort characters by alphabetical order\n  function sortCharacters(prev, next) {\n    if (prev.name > next.name) {\n      return 1;\n    }\n    if (prev.name < next.name) {\n      return -1;\n    }\n    return 0;\n  }\n\n  // RENDER\n  const filteredCharacters = characters\n    .filter(filterByName)\n    .filter(filterBySpecie);\n\n  let newCharacters;\n  if (orderFilter) {\n    newCharacters = filteredCharacters.sort(sortCharacters);\n  } else {\n    newCharacters = filteredCharacters;\n  }\n\n  const renderCharacterDetail = (props) => {\n    const findCharacter = characters.find((character) => {\n      return character.id === parseInt(props.match.params.id);\n    });\n    if (findCharacter !== undefined) {\n      return <CharacterDetail character={findCharacter} />;\n    }\n  };\n\n  return (\n    <>\n      {isLoading === true ? <Loading /> : null}\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleFilterChange={handleFilterChange}\n              nameFilter={nameFilter}\n              handleCheckInput={handleCheckInput}\n            />\n            <section>\n              <CharacterList characters={newCharacters} />\n            </section>\n          </Route>\n          <Route path=\"/character/:id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}